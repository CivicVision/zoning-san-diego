(function() {
  var findLatLng, findZoning, search, showHumanReadableZone, zones;

  zones = {
    "RE": {
      type: "Residential",
      sub: "Estate"
    },
    "RS": {
      type: "Residential",
      sub: "Single Unit"
    },
    "RX": {
      type: "Residential",
      sub: "Small Lot"
    },
    "RT": {
      type: "Residential",
      sub: "Townhouse"
    },
    "RM": {
      type: "Residential",
      sub: "Multiple Unit"
    },
    "CN": {
      type: "Commercial",
      sub: "Neighborhood"
    },
    "CR": {
      type: "Commercial",
      sub: "Regional"
    },
    "CO": {
      type: "Commercial",
      sub: "Office"
    },
    "CV": {
      type: "Commercial",
      sub: "Visitor"
    },
    "CP": {
      type: "Commercial",
      sub: "Parking"
    },
    "CC": {
      type: "Commercial",
      sub: "Community"
    },
    "IP": {
      type: "Industrial",
      sub: ""
    },
    "IL": {
      type: "Industrial",
      sub: ""
    },
    "IH": {
      type: "Industrial",
      sub: ""
    },
    "IS": {
      type: "Industrial",
      sub: ""
    },
    "IBT": {
      type: "Industrial",
      sub: ""
    },
    "OP": {
      type: "Open Space",
      sub: ""
    },
    "OC": {
      type: "Open Space",
      sub: ""
    },
    "OR": {
      type: "Open Space",
      sub: ""
    },
    "OF": {
      type: "Open Space",
      sub: ""
    },
    "AG": {
      type: "Agricultural",
      sub: ""
    },
    "AR": {
      type: "Agricultural",
      sub: ""
    }
  };

  showHumanReadableZone = function(zoneCode) {
    var sub;
    sub = zoneCode.slice(0, 2);
    return zones[sub];
  };

  findLatLng = function(address) {
    return fetch("https://api.geocod.io/v1.6/geocode?q=" + address + "&&api_key=" + GEOCODE_API_KEY).then(function(response) {
      return response.json();
    }).then(function(data) {
      return data.results[0].location;
    });
  };

  findZoning = function(lat, long) {
    var query, sql;
    query = "SELECT * FROM city_zoning_sd WHERE ST_CONTAINS(the_geom,ST_SetSRID(ST_MakePoint({{long}},{{lat}}),4326))";
    sql = new cartodb.SQL({
      user: 'milafrerichs'
    });
    return sql.execute(query, {
      lat: lat,
      long: long
    }).done(function(data) {
      var zoneCode, zoneHuman;
      if (data.rows.length > 0) {
        zoneCode = data.rows[0].zone_name;
        zoneHuman = showHumanReadableZone(zoneCode);
        document.getElementById('zone').innerHTML = zoneHuman.type;
        document.getElementById('sub-zone').innerHTML = zoneHuman.sub;
        document.getElementById('zone-code').innerHTML = zoneCode;
      }
      document.getElementById('find-zone').innerHTML = 'Find my zone';
      return document.getElementById('find-zone-example').innerHTML = 'Use example';
    }).error(function(errors) {
      document.getElementById('find-zone').innerHTML = 'Find my zone';
      document.getElementById('find-zone-example').innerHTML = 'Use example';
      return alert('Somethign went wrong. Please try again.');
    });
  };

  search = function(address) {
    if (!address.match(/San Diego/)) {
      address += ", San Diego";
    }
    return findLatLng(address).then(function(coordinates) {
      return findZoning(coordinates.lat, coordinates.lng);
    });
  };

  window.onload = function() {
    document.getElementById('find-zone').addEventListener("click", function(event) {
      var address;
      this.innerHTML = 'Searching ...';
      event.preventDefault();
      address = document.getElementById('address').value;
      return search(address);
    }, false);
    return document.getElementById('find-zone-example').addEventListener("click", function(event) {
      this.innerHTML = 'Searching ...';
      event.preventDefault();
      return search("1200 Third Ave");
    }, false);
  };

}).call(this);
